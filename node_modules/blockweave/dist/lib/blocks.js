"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("arconnect");
class Blocks {
    api;
    network;
    cache;
    constructor(api, network, cache) {
        this.api = api;
        this.network = network;
        this.cache = cache;
    }
    /**
     * Gets a block by its "indep_hash"
     */
    async get(indepHash) {
        let block = this.cache && (await this.cache.get(`indep_${indepHash}`));
        if (block) {
            return block;
        }
        const response = await this.api.get(`block/hash/${indepHash}`);
        if (response.status === 200) {
            block = response.data;
            if (this.cache) {
                this.cache.set(`indep_${indepHash}`, block, 60 * 60 * 1000); // 1 hour
            }
            return block;
        }
        else {
            if (response.status === 404) {
                throw new Error('Block not found.');
            }
            else {
                throw new Error(`Error while loading block data: ${response.data}`);
            }
        }
    }
    /**
     * Gets current block data (ie. block with indep_hash = Network.getInfo().current)
     */
    async getCurrent() {
        let block = this.cache && (await this.cache.get('current_block'));
        if (block) {
            return block;
        }
        const { current } = await this.network.getInfo();
        block = await this.get(current);
        if (this.cache) {
            this.cache.set('current_block', block, 2 * 60 * 1000); // 2 minutes
        }
        return block;
    }
}
exports.default = Blocks;
