"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseObject = void 0;
const buffer_1 = require("./buffer");
class BaseObject {
    get(field, options) {
        if (!Object.getOwnPropertyNames(this).includes(field)) {
            throw new Error(`Field "${field}" not found in object ${this.constructor.name}`);
        }
        // Handle fields that are Uint8Array.
        // To maintain compatibility, we encode them to b64url, only if the decode option is not specified.
        if (this[field] && this[field].constructor.name === 'Uint8Array') {
            if (options && options.decode && options.string) {
                return (0, buffer_1.bufferToString)(this[field]);
            }
            if (options && options.decode && !options.string) {
                return this[field];
            }
            return (0, buffer_1.bufferTob64Url)(this[field]);
        }
        if (options && options.decode === true) {
            if (options.string) {
                return (0, buffer_1.b64UrlToString)(this[field]);
            }
            return (0, buffer_1.b64UrlToBuffer)(this[field]);
        }
        return this[field];
    }
}
exports.BaseObject = BaseObject;
