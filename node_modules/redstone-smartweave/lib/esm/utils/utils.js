/* eslint-disable */
export const sleep = (ms) => {
    return new Promise((resolve) => setTimeout(resolve, ms));
};
export const deepCopy = (input) => {
    return JSON.parse(JSON.stringify(input));
};
export const mapReplacer = (key, value) => {
    if (value instanceof Map) {
        return {
            dataType: 'Map',
            value: Array.from(value.entries())
        };
    }
    else {
        return value;
    }
};
export const asc = (a, b) => a - b;
export const desc = (a, b) => b - a;
export function timeout(s) {
    let timeoutId = null;
    const timeoutPromise = new Promise((resolve, reject) => {
        timeoutId = setTimeout(() => {
            clearTimeout(timeoutId);
            reject('timeout');
        }, s * 1000);
    });
    return {
        timeoutId,
        timeoutPromise
    };
}
//# sourceMappingURL=utils.js.map