import { LoggerFactory, normalizeContractSource, SmartWeaveGlobal } from '../../..';
import { ContractHandlerApi } from './ContractHandlerApi';
/**
 * A factory that produces handlers that are compatible with the "current" style of
 * writing SW contracts (ie. using "handle" function).
 */
export class HandlerExecutorFactory {
    constructor(arweave) {
        this.arweave = arweave;
        this.logger = LoggerFactory.INST.create('HandlerExecutorFactory');
    }
    async create(contractDefinition) {
        const normalizedSource = normalizeContractSource(contractDefinition.src);
        const swGlobal = new SmartWeaveGlobal(this.arweave, {
            id: contractDefinition.txId,
            owner: contractDefinition.owner
        });
        const contractFunction = new Function(normalizedSource);
        return new ContractHandlerApi(swGlobal, contractFunction, contractDefinition);
    }
}
//# sourceMappingURL=HandlerExecutorFactory.js.map